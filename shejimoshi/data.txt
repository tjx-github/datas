注册树模式  解决全局共享和交换对象 ，
单例模式    单例模式就是指某个类只允许new一次【单例模式解决的是如何在整个项目中创建唯一对象实例的问题】
工厂模式    工厂模式是有工厂方法或类生成对象，而不是直接new
适配器模式  如框架redis  memcache  file都使用了注册树模式
策略模式    将一组特定的行为和算法封装成类，一适应某些特定的上下文环境【如针对男女显示广告，传统需要很多if判断，使用它就不需要判断，而且扩展性强。假如某天要针对人妖推送广告时就需要改很多的if else、。。。】
数据对象映射模式    将对象和数据存储起来，对一个对象的操作会映射为数据存储的操作（）
观察者模式  当一个对象改变时，依赖它的对象全部会收到通知并更新
原型模式    与工厂模式相似，
装饰器模式  可以动态添加修改类的功能
迭代器模式
