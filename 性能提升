Nginx Apache 开启压缩zip
    Nginx配置
        开启缓存
            location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
                    access_log   off; 
                    expires      30d;
            }
            location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
                access_log   off;
                expires      24h;
            }
            location ~* ^.+\.(html|htm)$ {
                    expires      1h;
            }

    Nginx配置
            # 开启gzip
            gzip on;
            # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
            gzip_min_length 1k;
            # gzip 压缩级别，1-10，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
            gzip_comp_level 2;
            # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
            gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
            # 是否在http header中添加Vary: Accept-Encoding，建议开启
            gzip_vary on;
            # 禁用IE 6 gzip
            gzip_disable "MSIE [1-6]\.";




开启 zip，opcache
用单引号代替双引号来包含字符串，这样做会更快一些。因为PHP会在双引号包围的字符串中搜寻变量，单引号则不会
如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍
$row[’id’] 的速度是$row[id]的7倍。
echo 比 print 快，并且使用echo的多重参数
在执行for循环之前确定最大循环数，不要每循环一次都计算最大值，最好运用foreach代替，如果考虑到 foreach($array as $var)每次拷贝的消耗，可以使用foreach($array as &$var)这样的引用。
注销那些不用的变量尤其是大数组，以便释放内存。
尽量避免使用__get，__set，__autoload。
 include文件时尽量使用绝对路径，因为它避免了PHP去include_path里查找文件的速度，解析操作系统路径所需的时间会更少。
如果你想知道脚本开始执行(译注：即服务器端收到客户端请求)的时刻，使用$_SERVER['REQUEST_TIME']要好于time()。
函数代替正则表达式完成相同功能
递增一个全局变量要比递增一个局部变量慢2倍。
递增一个对象属性(如：$this->prop++)要比递增一个局部变量慢3倍
递增一个未预定义的局部变量要比递增一个预定义的局部变量慢9至10倍
、尽量做缓存，可使用memcached。memcached是一款高性能的内存对象缓存系统，可用来加速动态Web应用程序，减轻数据库负载。对运算码 (OP code)的缓存很有用，使得脚本不必为每个请求做重新编译
、当操作字符串并需要检验其长度是否满足某种要求时，你想当然地会使用strlen()函数。此函数执行起来相当快，因为它不做任何计算，只返回在zval 结构(C的内置数据结构，用于存储PHP变量)中存储的已知字符串长度。但是，由于strlen()是函数，多多少少会有些慢，因为函数调用会经过诸多步骤，如字母小写化(译注：指函数名小写化，PHP不区分函数名大小写)、哈希查找，会跟随被调用的函数一起执行。在某些情况下，你可以使用isset() 技巧加速执行你的代码。

　　(举例如下)

　　if (strlen($foo) < 5) { echo “Foo is too short”$$ }

　　(与下面的技巧做比较)

　　if (!isset($foo{5})) { echo “Foo is too short”$$ }
